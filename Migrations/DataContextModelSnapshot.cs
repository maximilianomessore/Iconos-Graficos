// <auto-generated />
using System;
using Iconos_Graficos.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Iconos_Graficos.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Iconos_Graficos.Models.City", b =>
                {
                    b.Property<int>("cityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cityID"), 1L, 1);

                    b.Property<string>("cityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("continentID")
                        .HasColumnType("int");

                    b.Property<int>("numberResidents")
                        .HasColumnType("int");

                    b.Property<int>("totalArea")
                        .HasColumnType("int");

                    b.HasKey("cityID");

                    b.HasIndex("continentID");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("Iconos_Graficos.Models.Continent", b =>
                {
                    b.Property<int>("continentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("continentID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("continentID");

                    b.ToTable("continents");
                });

            modelBuilder.Entity("Iconos_Graficos.Models.GraphicIcon", b =>
                {
                    b.Property<int>("iconID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("iconID"), 1L, 1);

                    b.Property<int>("cityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<string>("history")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iconName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iconID");

                    b.HasIndex("cityID");

                    b.ToTable("GraphicIcons");
                });

            modelBuilder.Entity("Iconos_Graficos.Models.City", b =>
                {
                    b.HasOne("Iconos_Graficos.Models.Continent", null)
                        .WithMany("cityIcons")
                        .HasForeignKey("continentID");
                });

            modelBuilder.Entity("Iconos_Graficos.Models.GraphicIcon", b =>
                {
                    b.HasOne("Iconos_Graficos.Models.City", "city")
                        .WithMany("GraphicIcons")
                        .HasForeignKey("cityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("city");
                });

            modelBuilder.Entity("Iconos_Graficos.Models.City", b =>
                {
                    b.Navigation("GraphicIcons");
                });

            modelBuilder.Entity("Iconos_Graficos.Models.Continent", b =>
                {
                    b.Navigation("cityIcons");
                });
#pragma warning restore 612, 618
        }
    }
}
